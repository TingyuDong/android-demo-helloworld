plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}


def keyProperty = rootProject.file('local.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keyProperty))

android {
    namespace 'com.thoughtworks.androidtrain'
    compileSdk 32

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.1"
    }

    defaultConfig {
        applicationId "com.thoughtworks.androidtrain"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeDebugFile'])
            storePassword keystoreProperties['storeDebugPassword']
            keyAlias keystoreProperties['keyDebugAlias']
            keyPassword keystoreProperties['keyDebugPassword']
        }
        release {
            storeFile file(keystoreProperties['storeReleaseFile'])
            storePassword keystoreProperties['storeReleasePassword']
            keyAlias keystoreProperties['keyReleaseAlias']
            keyPassword keystoreProperties['keyReleasePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.8.6';
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha05"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation "io.coil-kt:coil-compose:2.1.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.4.0")
    // or Material Design 2
    implementation("androidx.compose.material:material:1.1.1")
    // Android Studio Preview support
    implementation("androidx.compose.ui:ui-tooling:1.1.1")
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    def room_version = "2.4.3"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin Symbol Processing (KSP)
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:$room_version")

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:$room_version")

    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")

    // optional - Paging 3 Integration
//    implementation("androidx.room:room-paging:2.5.0-beta01")
}